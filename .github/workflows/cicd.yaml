name: CI-CD


on:
  push:
    branches:
      - dev
      - pre-release
      - main
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - dev
      - pre-release
      - master
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        type: choice
        options:
          - dev
          - pre-release

##############################################################################################################
### Setup Environment
##############################################################################################################

jobs:
  set-environment:
    runs-on: ubuntu-latest
    outputs:
      ENV_NAME: ${{ steps.setenv.outputs.ENV_NAME }}
    steps:
      - id: setenv
        env:
          DISPATCH_ENV: ${{ github.event.inputs.environment || '' }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_BASE_REF_NAME: ${{ github.base_ref }}
        run: |
          echo "Determining environment and image name..."
          if [[ "$GITHUB_EVENT_NAME" == "workflow_dispatch" ]]; then
            ENV_NAME="$DISPATCH_ENV"
          elif [[ "$GITHUB_BASE_REF_NAME" == "dev"  || "$GITHUB_REF_NAME" == "dev" ]]; then
            ENV_NAME=dev
          elif [[ "$GITHUB_BASE_REF_NAME" == "pre-release" || "$GITHUB_REF_NAME" == "pre-release" ]]; then
            ENV_NAME=pre-release
          elif [[ "$GITHUB_REF" == refs/tags/* || "$GITHUB_BASE_REF_NAME" == "master" || "$GITHUB_REF_NAME" == "master" ]]; then
            ENV_NAME=prod
          else
            ENV_NAME=dev
          fi
          echo "ENV_NAME=$ENV_NAME"
          echo "ENV_NAME=$ENV_NAME" >> $GITHUB_OUTPUT

  test:
    name: test-${{ needs.set-environment.outputs.ENV_NAME }}
    needs: [set-environment]
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request' && (github.base_ref == 'master' || github.base_ref == 'pre-release') ||
      (github.event_name == 'push' && github.ref == 'refs/heads/master') || (github.event_name == 'push' && github.ref == 'refs/heads/pre-release')
    steps:
      - uses: actions/checkout@v4
  
  sonarcloud-check:
    name: sonarcloud-check-${{ needs.set-environment.outputs.ENV_NAME }}
    needs: [set-environment]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

  build:
    name: build-${{ needs.set-environment.outputs.ENV_NAME }}
    needs: [set-environment]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' || github.event_name == 'push' && github.ref == 'refs/heads/pre-release'
    steps:
      - uses: actions/checkout@v4

  package:
    name: package-${{ needs.set-environment.outputs.ENV_NAME }}
    needs: [set-environment]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' || github.event_name == 'push' && github.ref == 'refs/heads/pre-release'
    steps:
      - uses: actions/checkout@v4

  backup:
    name: backup-${{ needs.set-environment.outputs.ENV_NAME }}
    needs: [set-environment]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.job_group == 'mysql'
    steps:
      - uses: actions/checkout@v4

  testing:
    name: testing-${{ needs.set-environment.outputs.ENV_NAME }}
    needs: [set-environment]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.job_group == 'mssql'
    steps:
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

  restore:
    name: restore-${{ needs.set-environment.outputs.ENV_NAME }}
    needs: [set-environment]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.job_group == 'oracle'
    steps:
      - uses: actions/checkout@v4

  deploy:
    name: deploy-${{ needs.set-environment.outputs.ENV_NAME }}
    needs: [set-environment]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.job_group == 'postgres'
    steps:
      - uses: actions/checkout@v4
